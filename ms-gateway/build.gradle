plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // WebFlux + Gateway
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

    // Reactive Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Feign (sən istifadə edirsən)
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // JWT (JJWT – Java JWT by io.jsonwebtoken)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // JSON Serialization
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Swagger for WebFlux (əgər istifadə edəcəksənsə)
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
